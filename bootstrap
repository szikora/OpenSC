#!/bin/sh

usage()
{
cat << EOF
usage: $0 options

OpenSC bootstrap
OPTIONS:
   -h      Show this message
   -s      Package suffix
   -S      Use package suffix as 'git' appended with the date of last commit
   -r      Package version revision
   -R      Use package version revision as Git commit number from 'git describe' result
   -b      Package branch
   -B      Use package branch as current Git branch
EOF
}


SUFFIX=
REVISION=
VERBOSE=
while getopts “:hs:Sr:R” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         s)
             SUFFIX=$OPTARG
             ;;
         S)
             SUFFIX=git`git log -1 --pretty=fuller --date=iso | grep CommitDate: | sed -E 's/^CommitDate:\s(.*)/\1/' | sed -E 's/(.*)-(.*)-(.*) (.*):(.*):(.*)\s+.*/\1\2\3\4\5\6/'`
             ;;
         r)
             REVISION=$OPTARG
             ;;
         R)
             REVISION=`git describe | perl -ne 'print $1 if /^[\.0-9]*-([0-9]*)-g[a-z0-9]*$/;'`
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

set -e
set -x
if [ -f Makefile ]; then
  make distclean
fi
rm -rf *~ *.cache *.m4 config.guess config.log config.status config.sub depcomp ltmain.sh


if [ -n "$SUFFIX" ] || [ -n "$REVISION" ]
then
    cp configure.ac configure.ac.orig

    if [ -n "$SUFFIX" ]
    then
        echo Set package suffix "$SUFFIX"
        cp configure.ac configure.ac.prev
        sed 's/^define(\[PACKAGE_SUFFIX\],\s*\[\([-~]*[0-9a-zA-Z]*\)\])$/define(\[PACKAGE_SUFFIX\], \['$SUFFIX'\])/g' configure.ac.prev > configure.ac
    fi

    if [ -n "$REVISION" ]
    then
        echo Set package revision "$REVISION"
        cp configure.ac configure.ac.prev
        sed 's/^define(\[PACKAGE_VERSION_REVISION\],\s*\[\([-~]*[0-9a-zA-Z]*\)\])$/define(\[PACKAGE_VERSION_REVISION\], \['$REVISION'\])/g' configure.ac.prev > configure.ac
    fi
fi

autoreconf --verbose --install --force
